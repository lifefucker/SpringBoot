server:
  port: 10001

spring:
  application:
    name: eureka-server

cluster:
  eureka:
    server1:
      ip: 192.168.3.198
      port: 10001
    server2:
      ip: 192.168.3.198
      port: 10002
    server3:
      ip: 192.168.3.198
      port: 10003

eureka:
#  environment: work
  client:
    register-with-eureka: true
    fetch-registry: false
    serviceUrl:
      defaultZone: http://lmy1:${cluster.eureka.server1.port}/eureka/,http://lmy2:${cluster.eureka.server2.port}/eureka/,http://lmy3:${cluster.eureka.server3.port}/eureka/
  server:
    enable-self-preservation: false
    eviction-interval-timer-in-ms: 10000
  instance:
    instance-id: ${spring.application.name}:${server.port}
    hostname: lmy1


##eureka
#指定环境
#eureka.environment=work
# 设置是否将自己作为客户端注册到注册中心（缺省true）
# 这里为不需要（查看@EnableEurekaServer注解的源码，会发现它间接用到了@EnableDiscoveryClient）
#eureka.client.register-with-eureka=false
# 设置是否从注册中心获取注册信息（缺省true）
# 因为这是一个单点的EurekaServer，不需要同步其它EurekaServer节点的数据，故设为false
#eureka.client.fetch-registry=false
#eureka.client.serviceUrl.defaultZone=http://${cluster.eureka.server1}:${cluster.eureka.port1}/eureka/
#是否开启自我保护模式，默认为true。
#eureka.server.enable-self-preservation=true
#续期时间，即扫描失效服务的间隔时间（缺省为60*1000ms）
#eureka.server.eviction-interval-timer-in-ms=10000